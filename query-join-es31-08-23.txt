query join

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

	soluzione 

	SELECT `students`.`name`, `students`.`surname`, `degrees`.`name`
	FROM `students`
	INNER JOIN `degrees`
	ON `students`.`degree_id` = `degrees`.`id`
	WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

	soluzione 1 ritorna tutte le info

	SELECT *
	FROM `degrees` 
	INNER JOIN `departments`
	ON `degrees`.`department_id` = `departments`.`id`
	WHERE `degrees`.`level`= 'Magistrale' AND `departments`.`name` = 'Dipartimento 	di Neuroscienze'

	soluzione 2 ritorna folo il nome del cordo, il livello del corso e il nome del dipartimento

	SELECT `degrees`.`name` AS 'degrees_name', `degrees`.`level` AS '	degrees_level', `departments`.`name` AS 'department_name'
	FROM `degrees` 
	INNER JOIN `departments`
	ON `degrees`.`department_id` = `departments`.`id`
	WHERE `degrees`.`level`= 'Magistrale' AND `departments`.`name` = 'Dipartimento 	di Neuroscienze'

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

	soluzione 1

	SELECT * 
	FROM `courses`
	INNER JOIN `course_teacher`
	ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `teachers`
	ON `course_teacher`.`teacher_id` = `teachers`.`id`
	WHERE `teachers`.`name` = 'Fulvio' AND  `teachers`.`surname` = 'Amato'


	soluzione 2

	SELECT `courses`.`name`AS 'cours_name' ,  `teachers`.`name` AS 'teacher_name', `teachers`.`surname`AS 'teacher_surname'
	FROM `courses`
	INNER JOIN `course_teacher`
	ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `teachers`
	ON `course_teacher`.`teacher_id` = `teachers`.`id`
	WHERE `teachers`.`name` = 'Fulvio' AND  `teachers`.`surname` = 'Amato'


	soluzione 3
	
	SELECT `courses`.`name`AS 'cours_name' ,  `teachers`.`name` AS 'teacher_name', `teachers`.`surname`AS 'teacher_surname'
	FROM `courses`
	INNER JOIN `course_teacher`
	ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `teachers`
	ON `course_teacher`.`teacher_id` = `teachers`.`id`
	WHERE `course_teacher`.`teacher_id` = 44

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
	soluzione 1

	SELECT *
	FROM `students`
	INNER JOIN `degrees`
	ON `students`.`degree_id` = `degrees`.`id`
	INNER JOIN `departments`
	ON `degrees`.`department_id` = `departments`.`id`
	ORDER BY `students`.`surname`, `students`.`name`

	soluzione 2

	SELECT `students`.`name` AS 'student_name',
	 `students`.`surname` AS 'student_surname',
	 `degrees`.`name` AS 'degree_name' ,
	 `degrees`.`level` AS 'degree_level',
	 `departments`.`name` AS 'department_name'
	FROM `students`
	INNER JOIN `degrees`
	ON `students`.`degree_id` = `degrees`.`id`
	INNER JOIN `departments`
	ON `degrees`.`department_id` = `departments`.`id`
	ORDER BY `students`.`surname`, `students`.`name`


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti


	soluzione 
	SELECT `degrees`.`name` AS 'degree_name' , 
	`degrees`.`level` AS 'degree_level',
   	 `courses`.`name` AS 'course_name',
   	 `teachers`.`name` AS 'teacher_name'
	FROM `degrees`
	INNER JOIN `courses`
	ON `courses`.`degree_id` = `degrees`.`id` 
	INNER JOIN `course_teacher`
	ON `course_teacher`.`course_id` = `courses`.`id`
	INNER JOIN `teachers`
	ON `course_teacher`.`teacher_id` = `teachers`.`id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)


	soluzione
	
	SELECT DISTINCT `teachers`.`name` AS 'teacher_name',
		`teachers`.`surname` AS 'teacher_surname',
    		`departments`.`name` AS 'department_name'
	FROM `teachers`
	INNER JOIN `course_teacher`
	ON `teachers`.`id` = `course_teacher`.`teacher_id`
	INNER JOIN `courses`
	ON `course_teacher`.`course_id` = `courses`.`id`
	INNER JOIN `degrees`
	ON `courses`.`degree_id` = `degrees`.`id`
	INNER JOIN `departments`
	ON `degrees`.`department_id` = `departments`.`id`
	WHERE `departments`.`name` = 'Dipartimento di Matematica';



BONUS

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.


	soluzione

	SELECT COUNT(`id`) AS 'total_exams_attempts',
	MAX(`exam_student`.`vote`) AS 'max_vote_recived',
	SUM(CASE WHEN `exam_student`.`vote` >=18 THEN 1 ELSE 0 END) AS 	`count_vote_above_18`
	FROM `students`
	INNER JOIN `exam_student`
	ON `exam_student`.`student_id` = `students`.`id`
	GROUP BY `students`.`id`


*SUM(CASE WHEN `exam_student`.`vote` >=18 THEN 1 ELSE 0 END) AS 	`count_vote_above_18` questa parte non sono stato capace di farla quindi ho eseguito una ricerca sia sul web che su chatgpt 


